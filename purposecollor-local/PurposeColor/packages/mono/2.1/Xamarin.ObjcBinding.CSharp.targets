<!--
***********************************************************************************************
Xamarin.ObjcBinding.CSharp.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
  created a backup copy.  Incorrect changes to this file will make it
  impossible to load or build your projects from the command-line or the IDE.

This file imports the version- and platform-specific targets for the project importing
this file. This file also defines targets to produce an error if the specified targets
file does not exist, but the project is built anyway (command-line or IDE build).

Copyright (C) 2011 Xamarin Inc. All rights reserved.
***********************************************************************************************
-->

<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="Xamarin.ObjcBinding.Tasks.BTouch" AssemblyFile="Xamarin.ObjcBinding.Tasks.dll" />

  <PropertyGroup>
    <TargetFrameworkIdentifier Condition="'$(TargetFrameworkIdentifier)' == ''">MonoTouch</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v1.0</TargetFrameworkVersion>
  </PropertyGroup>

  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.Targets" />
  <Import Project="Xamarin.ObjcBinding.Common.targets" />

  <PropertyGroup>
    <!-- work around a bug in the Mono Microsoft.CSharp.Targets that defaults the compiler to gmcs -->
    <CscToolPath Condition = "'$(OS)' == 'Unix'">$(MonoTouchSdkRoot)/bin/</CscToolPath>
    <CscToolExe Condition = "'$(OS)' == 'Unix'">smcs</CscToolExe>

    <!-- Btouch needs CscPath, but when building from within Visual Studio, it and the CscTool{Exe,Path}
         properties will be empty since VS uses the in-process compiler, so fix them. -->
    <CscPath Condition="'$(CscPath)' == '' And '$(OS)' != 'Unix'">$(CscToolPath)\$(CscToolExe)</CscPath>
    <CscPath Condition="'$(CscPath)' == '' And '$(OS)' != 'Unix'">$(MSBuildToolsPath)\csc.exe</CscPath>

    <BaseLibDllPath Condition="'$(OS)' == 'Unix' And '$(TargetFrameworkIdentifier)' == 'MonoTouch'">$(MonoTouchSdkRoot)/lib/mono/2.1/monotouch.dll</BaseLibDllPath>
    <BaseLibDllPath Condition="'$(OS)' != 'Unix' And '$(TargetFrameworkIdentifier)' == 'MonoTouch'">$(MSBuildExtensionsPath)\Xamarin\iOS\monotouch.dll</BaseLibDllPath>
    <BTouchToolPath Condition="'$(OS)' == 'Unix' And '$(TargetFrameworkIdentifier)' == 'MonoTouch' And '$(BTouchToolPath)' == ''">$(MonoTouchSdkRoot)/bin/</BTouchToolPath>
    <BTouchToolPath Condition="'$(OS)' != 'Unix' And '$(TargetFrameworkIdentifier)' == 'MonoTouch' And '$(BTouchToolPath)' == ''">$(MSBuildExtensionsPath)\Xamarin\iOS\</BTouchToolPath>
    <BTouchToolExe  Condition="'$(OS)' == 'Unix' And '$(TargetFrameworkIdentifier)' == 'MonoTouch' And '$(BTouchToolExe)' == ''">btouch</BTouchToolExe>
    <BTouchToolExe  Condition="'$(OS)' != 'Unix' And '$(TargetFrameworkIdentifier)' == 'MonoTouch' And '$(BTouchToolExe)' == ''">btouch.exe</BTouchToolExe>
    
    <BaseLibDllPath Condition="'$(OS)' == 'Unix' And '$(TargetFrameworkIdentifier)' == 'Xamarin.iOS'">$(MonoTouchSdkRoot)/lib/mono/Xamarin.iOS/Xamarin.iOS.dll</BaseLibDllPath>
    <BaseLibDllPath Condition="'$(OS)' != 'Unix' And '$(TargetFrameworkIdentifier)' == 'Xamarin.iOS'">$(MSBuildExtensionsPath)\Xamarin\DontKnowWhereYet\Xamarin.iOS.dll</BaseLibDllPath>
    <BTouchToolPath Condition="'$(OS)' == 'Unix' And '$(TargetFrameworkIdentifier)' == 'Xamarin.iOS' And '$(BTouchToolPath)' == ''">$(MonoTouchSdkRoot)/bin/</BTouchToolPath>
    <BTouchToolPath Condition="'$(OS)' != 'Unix' And '$(TargetFrameworkIdentifier)' == 'Xamarin.iOS' And '$(BTouchToolPath)' == ''">$(MSBuildExtensionsPath)\Xamarin\iOS\</BTouchToolPath>
    <BTouchToolExe  Condition="'$(OS)' == 'Unix' And '$(TargetFrameworkIdentifier)' == 'Xamarin.iOS' And '$(BTouchToolExe)' == ''">btouch-native</BTouchToolExe>
    <BTouchToolExe  Condition="'$(OS)' != 'Unix' And '$(TargetFrameworkIdentifier)' == 'Xamarin.iOS' And '$(BTouchToolExe)' == ''">btouch-native.exe</BTouchToolExe>
    
    <GeneratedSourcesFileList Condition="'$(GeneratedSourcesFileListing)' == ''">$(GeneratedSourcesDirectory)\sources.list</GeneratedSourcesFileList>

    <DefineConstants>__MOBILE__;__IOS__;$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <!-- Add our own pre-build steps -->
  <PropertyGroup>
    <CompileDependsOn>
      GenerateBindings;
      _CollectGeneratedSources;
      $(CompileDependsOn)
    </CompileDependsOn>
  </PropertyGroup>

  <!-- Override the CoreCompile Target to use btouch -->
  <Target Name="GenerateBindings"
  	  Inputs="$(MSBuildAllProjects);@(ObjcBindingApiDefinition);@(ObjcBindingCoreSource);@(ReferencePath)"
	  Outputs="$(GeneratedSourcesFileList)">

    <ItemGroup>
        <BTouchReferencePath Include="@(ReferenceCopyLocalPaths)" Condition="'%(Extension)' == '.dll'" />
    </ItemGroup>

    <BTouch AdditionalLibPaths="$(AdditionalLibPaths)"
    	    AllowUnsafeBlocks="$(AllowUnsafeBlocks)"
	    ApiDefinitions="@(ObjcBindingApiDefinition)"
	    CoreSources="@(ObjcBindingCoreSource)"
	    DefineConstants="$(DefineConstants)"
	    GeneratedSourcesDirectory="$(GeneratedSourcesDirectory)"
	    GeneratedSourcesFileList="$(GeneratedSourcesFileList)"
	    Namespace="$(Namespace)"
	    BTouchToolPath="$(BTouchToolPath)"
	    ToolExe="$(BTouchToolExe)"
	    CompilerPath="$(CscPath)"
	    BaseLibDll="$(BaseLibDllPath)"
	    References="@(ReferencePath);@(BTouchReferencePath)"
	    NoStdLib="$(NoStdLib)">
      <Output TaskParameter="GeneratedSourcesFileList" ItemName="GeneratedSourcesFileList" />
    </BTouch>
  </Target>

  <Target Name="_CollectGeneratedSources" DependsOnTarget="GenerateBindings">
    <ReadLinesFromFile File="$(GeneratedSourcesFileList)" >
      <Output TaskParameter="Lines" ItemName="GeneratedSources" />
    </ReadLinesFromFile>

    <CreateItem Include="@(ObjcBindingCoreSource)">
      <Output TaskParameter="Include" ItemName="Compile" />
    </CreateItem>

    <CreateItem Include="@(GeneratedSources)">
      <Output TaskParameter="Include" ItemName="Compile" />
    </CreateItem>

    <CreateItem Include="@(ObjcBindingNativeLibrary)">
      <Output TaskParameter="Include" ItemName="ManifestResourceWithNoCulture" />
    </CreateItem>
  </Target>

</Project>
